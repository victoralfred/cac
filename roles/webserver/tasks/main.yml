---
- name: Install apt prerequisites
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present
    update_cache: yes

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker apt repository
  apt_repository:
    repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: Install Docker
  apt:
    name: docker-ce
    state: present
    update_cache: yes

- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Pull the media server Docker image
  community.docker.docker_image:
    name: vicdonxp/loot-learn-local-v1
    source: pull

- name: Create related directories
  shell: |
    mkdir -p "{{ XDG_CONFIG_HOME | default(ansible_env.HOME + '/.config') }}/owt/management_console"
    mkdir -p "{{ XDG_CONFIG_HOME | default(ansible_env.HOME + '/.config') }}/owt/management_api"
    mkdir -p "{{ XDG_CONFIG_HOME | default(ansible_env.HOME + '/.config') }}/owt/portal"
    mkdir -p "{{ XDG_CONFIG_HOME | default(ansible_env.HOME + '/.config') }}/owt/webrtc_agent"
    mkdir -p "{{ XDG_CONFIG_HOME | default(ansible_env.HOME + '/.config') }}/owt/analytics_agent"
    mkdir -p "{{ XDG_CONFIG_HOME | default(ansible_env.HOME + '/.config') }}/owt/currentapp"
    mkdir -p "{{ XDG_CONFIG_HOME | default(ansible_env.HOME + '/.config') }}/owt/analytics_agent/store"
    
- name: Copy SSL certificate to remote hosts
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0755'
  loop:
    - { src: 'certificate.pfx', dest: '{{ XDG_CONFIG_HOME | default(ansible_env.HOME + "/.config") }}/owt/management_console/certificate.pfx' }
    - { src: 'certificate.pfx', dest: '{{ XDG_CONFIG_HOME | default(ansible_env.HOME + "/.config") }}/owt/management_api/certificate.pfx' }
    - { src: 'certificate.pfx', dest: '{{ XDG_CONFIG_HOME | default(ansible_env.HOME + "/.config") }}/owt/portal/certificate.pfx' }
    - { src: 'certificate.pfx', dest: '{{ XDG_CONFIG_HOME | default(ansible_env.HOME + "/.config") }}/owt/webrtc_agent/certificate.pfx' }
    - { src: 'certificate.pfx', dest: '{{ XDG_CONFIG_HOME | default(ansible_env.HOME + "/.config") }}/owt/analytics_agent/certificate.pfx' }
    - { src: 'certificate.pfx', dest: '{{ XDG_CONFIG_HOME | default(ansible_env.HOME + "/.config") }}/owt/currentapp/certificate.pfx' }
    - { src: 'certificate.pfx', dest: '{{ XDG_CONFIG_HOME | default(ansible_env.HOME + "/.config") }}/owt/analytics_agent/store/.owt.keystore' }

- name: Copy a configured file
  template:
    src: templates/config.j2
    dest: /tmp/docker-compose.yml
  vars:
    m_password: "{{ lookup('env', 'MONGO_INITDB_ROOT_PASSWORD') }}"
    m_username: "{{ lookup('env', 'MONGO_INITDB_ROOT_USERNAME') }}"

- name: Run media server container
  community.docker.docker_compose_v2:
    project_src: /tmp
  register: output

- name: Show results
  ansible.builtin.debug:
    var: output